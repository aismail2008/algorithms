package com.code.test.problemset.leetcode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.ThreadLocalRandom;

public class RandomSelector {

    public static void main(String[] args) {
        List<Integer> history = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 37, 44, 82, 91, 98, 110, 111, 120, 129, 126,
                142, 144, 145, 148, 149, 152, 159, 171, 175, 187, 195, 196, 201, 203, 204, 210, 220,
                221, 224, 241, 242, 245, 246, 247, 248, 252, 253, 267, 276));
        int[] selected = new int[7];
        int i = 0;
        while (history.size() < 299) {
            int s = ThreadLocalRandom.current().nextInt(1, 300);
            if (Collections.binarySearch(history, s) < 0) {
                selected[i++] = s;
                history.add(s);
                Collections.sort(history);

                if (i == 7) {
                    Arrays.stream(selected).forEach(n -> System.out.print(n + " - "));
                    System.out.println("");
                    i = 0;
                }
            }
        }

//         -  -  -  -  - 137 - 270 -


//        230 - 191 - 262 - 174 - 128 - 132 - 75 -
//        58 - 73 - 119 - 215 - 118 - 206 - 104 -
//        146 - 295 - 115 - 22 - 57 - 61 - 127 -
//        232 - 64 - 244 - 125 - 287 - 163 - 60 -
//        227 - 258 - 172 - 219 - 43 - 238 - 124 -
//        69 - 289 - 186 - 214 - 130 - 117 - 167 -
//        271 - 121 - 169 - 207 - 256 - 299 - 48 -
//        182 - 188 - 46 - 288 - 30 - 53 - 225 -
//        278 - 94 - 254 - 52 - 154 - 133 - 286 -
//        279 - 211 - 199 - 42 - 33 - 293 - 114 -
//        92 - 235 - 106 - 56 - 41 - 192 - 87 -
//        266 - 239 - 233 - 107 - 66 - 62 - 153 -
//        32 - 272 - 292 - 80 - 209 - 290 - 134 -
//        90 - 260 - 140 - 249 - 161 - 198 - 165 -
//        180 - 193 - 259 - 157 - 29 - 21 - 76 -
//        205 - 168 - 255 - 147 - 213 - 222 - 277 -
//        217 - 135 - 67 - 151 - 95 - 185 - 228 -
//        183 - 122 - 297 - 85 - 23 - 275 - 71 -
//        31 - 77 - 284 - 226 - 35 - 202 - 49 -
//        100 - 296 - 282 - 243 - 177 - 190 - 200 -
//        173 - 141 - 139 - 112 - 83 - 155 - 261 -
//        28 - 197 - 264 - 268 - 251 - 123 - 162 -
//        93 - 36 - 25 - 78 - 237 - 81 - 208 -
//        166 - 105 - 164 - 298 - 281 - 116 - 102 -
//        40 - 51 - 273 - 103 - 265 - 184 - 143 -
//        250 - 26 - 160 - 101 - 178 - 39 - 70 -
//        176 - 274 - 72 - 96 - 59 - 54 - 68 -
//        88 - 24 - 136 - 218 - 97 - 223 - 291 -
//        170 - 138 - 150 - 194 - 179 - 280 - 131 -
//        113 - 189 - 50 - 74 - 84 - 231 - 86 -
//        38 - 285 - 108 - 109 - 34 - 63 - 45 -
//        234 - 55 - 283 - 240 - 79 - 99 - 294 -
//        257 - 263 - 212 - 27 - 229 - 269 - 47 -
//        158 - 181 - 89 - 156 - 236 - 216 - 65 -

    }
}
